function removeErrors(e) { e.querySelectorAll(".contact__error-border").forEach(e => { e.classList.remove("contact__error-border"), e.querySelector(".show-error").remove("show-error") }), e.querySelector(".alert").classList.remove("show-alert", "success", "error") } function showErrors(e) { e.forEach(e => { if (!e.valid) { let t = document.querySelectorAll(".contact__input")[e.index].parentElement; t.classList.add("contact__error-border"); let r = t.querySelector(".contact__error"); r.classList.add("show-error"), r.querySelector(".error-msg").textContent = e.error } }), console.log("Invalid Form") } function showAlert(e) { let t = document.querySelector(".alert"); "Fail" === e || 400 === e || e === {} ? (t.classList.add("error", "show-alert"), t.querySelector("span").textContent = "Unable to send Email!") : "OK" !== e && 200 !== e || (t.classList.add("success", "show-alert"), t.querySelector("span").textContent = "Email Sent!", document.querySelector("button[type=submit]").innerHTML = 'Sent! <i class="uil uil-check button__icon"></i>') } function isEmpty(e) { return 0 !== e.length && "" !== e ? e.length >= 2 && e.length <= 75 ? [!0, ""] : [!1, "2-75 characters max."] : [!1, "Field is empty"] } document.querySelector("form.contact__form").addEventListener("submit", e => { e.preventDefault(); const t = document.querySelector("form.contact__form"), r = t.querySelectorAll(".contact__input"); let o = []; if (r.forEach((e, t) => { o.push({ name: e.name, id: e.id, type: e.type, value: e.value, index: t, valid: !1, error: "", pattern: () => "email" === e.type ? /^(([^<>()[\]\.,;:\s@\"]+(\.[^<>()[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/i : /^[a-zA-Z'-,. ]{2,45}$/ }) }), o.forEach(e => { let t = isEmpty(e.value); if (!t[0]) return e.valid = t[0], e.error = t[1], !1; e.valid = t[0], e.error = t[1], patternMatchTest(e) ? (e.valid = !0, e.error = "") : (e.valid = !1, e.error = "Invalid characters") }), removeErrors(t), o.every(e => !!e.valid)) { const e = { name: o[0].value, email: o[1].value, subject: o[2].value, message: o[3].value }; document.querySelector("button[type=submit]").innerHTML = '<div class="donut"></div>', fetch("https://api.emailjs.com/api/v1.0/email/send", { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ service_id: "service_562kegs", template_id: "template_2owpp5u", user_id: "user_pwnrSymGTUtZ4MVyEqwmT", template_params: e }) }).then(e => e.text()).then(e => { removeErrors(t), showAlert(e), setTimeout(() => { document.querySelector("button[type=submit]").innerHTML = 'Send Message <i class="uil uil-message button__icon"></i>' }, 3e3) }).catch(e => { console.log("Oops... " + e) }) } else showErrors(o); e.preventDefault() }); const patternMatchTest = e => e.pattern().test(e.value);