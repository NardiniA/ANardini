const navMenu = document.querySelector("#nav-menu"), navToggle = document.querySelector("#nav-toggle"), navClose = document.querySelector("#nav-close"); navToggle && navToggle.addEventListener("click", () => { navMenu.classList.add("show-menu") }), navClose && navClose.addEventListener("click", () => { navMenu.classList.remove("show-menu") }); const navLink = document.querySelectorAll(".nav__link"); function linkAction() { const e = document.querySelector("#nav-menu"); e.classList.remove("show-menu") } navLink.forEach(e => e.addEventListener("click", linkAction)); const skillsContent = document.querySelectorAll(".skills__content"), skillsHeader = document.querySelectorAll(".skills__header"); function toggleSkills() { var e = this.parentNode.className; for (i = 0; i < skillsContent.length; i++)skillsContent[i].className = "skills__content skills__close"; "skills__content skills__close" === e && (this.parentNode.className = "skills__content skills__open") } skillsHeader.forEach(e => { e.addEventListener("click", toggleSkills) }); const tabs = document.querySelectorAll("[data-target]"), tabContents = document.querySelectorAll("[data-content]"); tabs.forEach(t => { t.addEventListener("click", () => { const e = document.querySelector(t.dataset.target); tabContents.forEach(e => { e.classList.remove("qualification__active") }), e.classList.add("qualification__active"), tabs.forEach(e => { e.classList.remove("qualification__active") }), t.classList.add("qualification__active") }) }); const modalViews = document.querySelectorAll(".services__modal"), modalBtns = document.querySelectorAll(".services__button"), modalCloses = document.querySelectorAll(".services__modal-close"); let modal = function (e) { modalViews[e].classList.add("active-modal") }; modalBtns.forEach((e, t) => { e.addEventListener("click", () => { modal(t) }) }), modalCloses.forEach(e => { e.addEventListener("click", () => { modalViews.forEach(e => { e.classList.remove("active-modal") }) }) }); let swiperPortfolio = new Swiper(".portfolio__container", { cssMode: !0, loop: !0, navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" }, pagination: { el: ".swiper-pagination", clickable: !0 } }), swiperTestimonial = new Swiper(".testimonial__container", { loop: !0, grabCursor: !0, spaceBetween: 48, pagination: { el: ".swiper-pagination", clickable: !0, dynamicBullets: !0 }, breakpoints: { 568: { slidesPerView: 2 } } }); const helpBtns = document.querySelectorAll(".help__button"), helpText = document.querySelectorAll(".contact__help"); helpBtns.forEach((e, t) => { e.addEventListener("click", () => { helpBtns[t].classList.toggle("show-help") }) }); const alertBtn = document.querySelector(".alert__button"), alert = document.querySelector(".alert"); alertBtn.addEventListener("click", () => { alert.classList.remove("show-alert") }); const sections = document.querySelectorAll("section[id]"); function scrollActive() { var o = window.pageYOffset; sections.forEach(e => { var t = e.offsetHeight, l = e.offsetTop - 50; sectionId = e.getAttribute("id"), l < o && o <= l + t ? document.querySelector(".nav__menu a[href*=" + sectionId + "]").classList.add("active-link") : document.querySelector(".nav__menu a[href*=" + sectionId + "]").classList.remove("active-link") }) } function scrollHeader() { const e = document.getElementById("header"); 80 <= this.scrollY ? e.classList.add("scroll-header") : e.classList.remove("scroll-header") } function scrollUp() { const e = document.querySelector("#scroll-up"); 560 <= this.scrollY ? e.classList.add("show-scroll") : e.classList.remove("show-scroll") } window.addEventListener("scroll", scrollActive), window.addEventListener("scroll", scrollHeader), window.addEventListener("scroll", scrollUp); const themeButton = document.querySelector("#theme-button"), darkTheme = "dark-theme", iconTheme = "uil-sun", selectedTheme = localStorage.getItem("selected-theme"), selectedIcon = localStorage.getItem("selected-icon"), getCurrentTheme = () => document.body.classList.contains(darkTheme) ? "dark" : "light", getCurrentIcon = () => themeButton.classList.contains(iconTheme) ? "uil-moon" : "uil-sun"; selectedTheme && (document.body.classList["dark" === selectedTheme ? "add" : "remove"](darkTheme), themeButton.classList["uil-moon" === selectedIcon ? "add" : "remove"](iconTheme)), themeButton.addEventListener("click", () => { document.body.classList.toggle(darkTheme), themeButton.classList.toggle(iconTheme), localStorage.setItem("selected-theme", getCurrentTheme()), localStorage.setItem("selected-icon", getCurrentIcon()) });